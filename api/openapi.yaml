openapi: 3.0.3
info:
  title: jphacks2020_f_2002
  version: 0.0.0
servers:
  - url: https://e3c902a3-9f7d-4f1c-9b9a-daa5e4633165.mock.pstmn.io
    description: モックサーバー
  - url: http://localhost:8080
    description: ローカル環境
tags:
  - name: general
    description: 一般ユーザー用
  - name: admin
    description: 管理者ユーザー用
  - name: iot
    description: IoT用
  - name: plant
  - name: user
  - name: cultivation
  - name: message

paths:
  /plants:
    get:
      tags:
        - admin
        - general
        - plant
      summary: 全植物を取得
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'

    post:
      tags:
        - admin
        - plant
      summary: 植物を登録
      security:
        - Admin: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがいも
                nick_name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがーくん
                price:
                  description: 円
                  type: integer
                  minimum: 0
                  example: 880
                period:
                  description: 栽培期間（日）
                  type: integer
                  minimum: 0
                  example: 90
                difficulty:
                  description: 難易度（１〜？）
                  type: integer
                  minimum: 1
                  # maximum: ?
                  example: 2
                description:
                  type: string
                  minLength: 0
                  maxLength: 255
                  example: おいしさ満点のジャガイモだよ！ほくほく
                kit_name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: 始めてでも安心ジャガイモキット
                season:
                  description: 適正時期
                  type: object
                  properties:
                    from:
                      description: 月
                      type: integer
                      minimum: 1
                      maximum: 12
                      example: 4
                    to:
                      description: 月
                      type: integer
                      minimum: 1
                      maximum: 12
                      example: 6
                temperatures:
                  description: 温度環境
                  type: array
                  items:
                    $ref: '#/components/schemas/Temperature'
                waters:
                  description: 水分環境
                  type: array
                  items:
                    $ref: '#/components/schemas/Water'
              required:
                - name
                - nick_name
                - price
                - period
                - difficulty
                - description
                - kit_name
                - season
                - temperatures
                - waters
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /plants/{plant_id}:
    get:
      tags:
        - admin
        - general
        - plant
      summary: 特定の植物を取得
      parameters:
        - name: plant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        404:
          $ref: '#/components/responses/404'

    put:
      tags:
        - admin
        - plant
      summary: 徳栄値の植物を更新
      parameters:
        - name: plant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      security:
        - Admin: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがいも
                nick_name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがーくん
                price:
                  description: 円
                  type: integer
                  minimum: 0
                  example: 880
                period:
                  description: 栽培期間（日）
                  type: integer
                  minimum: 0
                  example: 90
                difficulty:
                  description: 難易度（１〜？）
                  type: integer
                  minimum: 1
                  # maximum: ?
                  example: 2
                description:
                  type: string
                  minLength: 0
                  maxLength: 255
                  example: おいしさ満点のジャガイモだよ！ほくほく
                kit_name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: 始めてでも安心ジャガイモキット
                season:
                  description: 適正時期
                  type: object
                  properties:
                    from:
                      description: 月
                      type: integer
                      minimum: 1
                      maximum: 12
                      example: 4
                    to:
                      description: 月
                      type: integer
                      minimum: 1
                      maximum: 12
                      example: 6
                temperatures:
                  description: 温度環境
                  type: array
                  items:
                    $ref: '#/components/schemas/Temperature'
                waters:
                  description: 水分環境
                  type: array
                  items:
                    $ref: '#/components/schemas/Water'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        404:
          $ref: '#/components/responses/404'

    delete:
      tags:
        - plant
      summary: 特定の植物を論理削除
      security:
        - Admin: []
      parameters:
        - name: plant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'

  /users:
    get:
      tags:
        - admin
        - user
      summary: 全ユーザーを取得
      security:
        - Admin: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      tags:
        - admin
        - general
        - user
      summary: ユーザーを登録
      security:
        - Firebase: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: 御謝部　次多振
              required:
                - name
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{user_id}:
    get:
      tags:
        - admin
        - user
      security:
        - Admin: []
      summary: 特定のユーザーを取得
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/responses/404'

    put:
      tags:
        - admin
        - user
      security:
        - Admin: []
      summary: 特定のユーザーを更新
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: 御謝部　次多振
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/responses/404'

    delete:
      tags:
        - admin
        - user
      summary: 特定のユーザーを論理削除
      security:
        - Admin: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'

  /users/{user_id}/cultivations:
    post:
      tags:
        - admin
        - cultivation
      security:
        - Admin: []
      summary: 特定のユーザーに栽培物を登録
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plant_id:
                  $ref: '#/components/schemas/Id'
                nick_name:
                  description: ユーザーが任意に決定できるニックネーム
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがーくん2世
              required:
                - plant_id
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'
        404:
          $ref: '#/components/responses/404'

  /cultivations/{cultivation_id}:
    get:
      tags:
        - admin
        - cultivation
      security:
        - Admin: []
      summary: 特定の栽培物を取得
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'
        404:
          $ref: '#/components/responses/404'

    put:
      tags:
        - admin
        - cultivation
      summary: 特定の栽培物を変更
      security:
        - Admin: []
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick_name:
                  description: ユーザーが任意に決定できるニックネーム
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがーくん2世
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'

    delete:
      tags:
        - admin
        - cultivation
      security:
        - Admin: []
      summary: 特定の栽培物を削除
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'

  /user:
    get:
      tags:
        - general
        - user
      summary: ログイン中のユーザーを取得
      security:
        - Firebase: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      tags:
        - general
        - user
      summary: ログイン中のユーザーを変更
      security:
        - Firebase: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                  example: 御謝部　次多振
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/responses/404'

    delete:
      tags:
        - general
        - user
      summary: ログイン中のユーザーを論理削除
      security:
        - Firebase: []
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'

  /user/cultivations:
    post:
      tags:
        - general
        - cultivation
      summary: ログイン中のユーザーに特定の栽培物を登録
      security:
        - Firebase: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plant_id:
                  $ref: '#/components/schemas/Id'
                nick_name:
                  description: ユーザーが任意に決定できるニックネーム
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがーくん2世
              required:
                - plant_id
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'

  /user/cultivations/{cultivation_id}:
    get:
      tags:
        - general
        - cultivation
      summary: ログイン中のユーザーの特定の栽培物を取得
      security:
        - Firebase: []
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'

    put:
      tags:
        - general
        - cultivation
      summary: ログイン中のユーザーの特定の栽培物を変更
      security:
        - Firebase: []
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick_name:
                  description: ユーザーが任意に決定できるニックネーム
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: じゃがーくん2世
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cultivation'

    delete:
      tags:
        - general
        - cultivation
      summary: ログイン中のユーザーの特定の栽培物を論理削除
      security:
        - Firebase: []
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'

  /user/cultivations/{cultivation_id}/watering:
    post:
      tags:
        - general
        - cultivation
      summary: ログイン中のユーザーの特定の栽培物に水やり
      security:
        - Firebase: []
      parameters:
        - name: cultivation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watering'

  /iot/sensors:
    post:
      tags:
        - iot
        - cultivation
      summary: 特定の栽培物のセンサーデータを登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  $ref: '#/components/schemas/Id'
                raspi_device_id:
                  $ref: '#/components/schemas/Id'
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      psoc6_device_id:
                        $ref: '#/components/schemas/Id'
                      cultivation_id:
                        $ref: '#/components/schemas/Id'
                      humidity:
                        description: 湿度
                        type: number
                        format: float
                        example: 67.2
                      temperature:
                        description: 気温
                        type: number
                        format: float
                        example: 24.3
                      illuminance:
                        description: 照度
                        type: number
                        format: float
                        example: 500.5
                      soil_moisture:
                        description: 土壌含水率
                        type: number
                        format: float
                        example: 70.5
                      pressure:
                        description: 気圧
                        type: number
                        format: float
                        example: 101300.5
              required:
                - user_id
                - raspi_device_id
                - data
      responses:
        201:
          $ref: '#/components/responses/201'

        404:
          $ref: '#/components/responses/404'

  /messages:
    get:
      tags:
        - message
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

    post:
      tags:
        - message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: 水が欲しいな♪
              required:
                - text
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /admin/reset:
    get:
      tags:
        - admin
      summary: 'DBを初期化し、初期データを挿入'
      security:
        - Admin: []
      responses:
        204:
          $ref: '#/components/responses/204'

components:
  schemas:
    Id:
      type: integer
      minimum: 1
      example: 1

    Time:
      type: string
      format: HH:MM:SS
      example: '12:59:59'

    Datetime:
      type: string
      format: date-time
      example: 2020-01-01T12:59:59Z

    Count:
      type: integer
      minimum: 0
      example: 10

    URL:
      type: string
      format: url
      example: 'https://example.com'

    Temperature:
      description: 気温
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 暑い
        value:
          type: number
          format: float
          example: 29.5

    Water:
      description: 水分量
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 多い
        value:
          description: 値が小さいほど水分が多い
          type: integer
          example: 464

    Plant:
      description: 植物
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        created_at:
          $ref: '#/components/schemas/Datetime'
        updated_at:
          $ref: '#/components/schemas/Datetime'
        deleted_at:
          $ref: '#/components/schemas/Datetime'
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: じゃがいも
        nick_name:
          type: string
          minLength: 1
          maxLength: 255
          example: じゃがーくん
        price:
          description: 円
          type: integer
          minimum: 0
          example: 880
        period:
          description: 栽培期間（日）
          type: integer
          minimum: 0
          example: 90
        difficulty:
          description: 難易度（１〜？）
          type: integer
          minimum: 1
          # maximum: ?
          example: 2
        description:
          type: string
          minLength: 0
          maxLength: 255
          example: おいしさ満点のジャガイモだよ！ほくほく
        kit_name:
          type: string
          minLength: 1
          maxLength: 255
          example: 始めてでも安心ジャガイモキット
        season:
          description: 適正時期
          type: object
          properties:
            from:
              description: 月
              type: integer
              minimum: 1
              maximum: 12
              example: 4
            to:
              description: 月
              type: integer
              minimum: 1
              maximum: 12
              example: 6
        temperatures:
          description: 温度環境
          type: array
          items:
            $ref: '#/components/schemas/Temperature'
        waters:
          description: 水分環境
          type: array
          items:
            $ref: '#/components/schemas/Water'

    User:
      description: ユーザー
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        created_at:
          $ref: '#/components/schemas/Datetime'
        updated_at:
          $ref: '#/components/schemas/Datetime'
        deleted_at:
          $ref: '#/components/schemas/Datetime'
        uid:
          description: firebaseのuid
          type: string
          example: DFXSgRVbVKjBdAnYxN6wCZx74UNsDf3
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 御謝部　次多振
        cultivations:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Id'
              created_at:
                description: 購入日と同義
                $ref: '#/components/schemas/Datetime'
              updated_at:
                $ref: '#/components/schemas/Datetime'
              deleted_at:
                $ref: '#/components/schemas/Datetime'
              plant:
                $ref: '#/components/schemas/Plant'
              start_cultivating_at:
                $ref: '#/components/schemas/Datetime'
              finish_cultivating_at:
                $ref: '#/components/schemas/Datetime'

    Watering:
      description: 水やりの記録
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        created_at:
          $ref: '#/components/schemas/Datetime'
        updated_at:
          $ref: '#/components/schemas/Datetime'
        deleted_at:
          $ref: '#/components/schemas/Datetime'

    Harvesting:
      description: 収穫の記録
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        created_at:
          $ref: '#/components/schemas/Datetime'
        updated_at:
          $ref: '#/components/schemas/Datetime'
        deleted_at:
          $ref: '#/components/schemas/Datetime'

    Cultivation:
      description: 栽培している植物
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        created_at:
          description: 購入日と同義
          $ref: '#/components/schemas/Datetime'
        updated_at:
          $ref: '#/components/schemas/Datetime'
        deleted_at:
          $ref: '#/components/schemas/Datetime'
        plant:
          $ref: '#/components/schemas/Plant'
        nick_name:
          description: ユーザーが任意に決定できるニックネーム
          type: string
          minLength: 1
          maxLength: 255
          example: じゃがーくん2世
        start_cultivating_at:
          $ref: '#/components/schemas/Datetime'
        finish_cultivating_at:
          $ref: '#/components/schemas/Datetime'
        rerord:
          description: 余裕があれば
          type: object
          properties:
            waterings:
              type: array
              items:
                $ref: '#/components/schemas/Watering'
            harvesings:
              type: array
              items:
                $ref: '#/components/schemas/Harvesting'

    Message:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        created_at:
          $ref: '#/components/schemas/Datetime'
        updated_at:
          $ref: '#/components/schemas/Datetime'
        deleted_at:
          $ref: '#/components/schemas/Datetime'
        speaker:
          type: string
          description: user | plant
          example: plant
        text:
          type: string
          example: 水が欲しいな♪

  responses:
    200:
      description: OK
    201:
      description: Created
    204:
      description: No Content
    400:
      description: Bad Request
    401:
      description: Unauthorized
    403:
      description: ForbIdden
    404:
      description: Not Found
    cors:
      description: Default response for CORS method
      headers:
        Access-Control-Allow-Headers:
          schema:
            type: 'string'
        Access-Control-Allow-Methods:
          schema:
            type: 'string'
        Access-Control-Allow-Origin:
          schema:
            type: 'string'

  securitySchemes:
    Admin:
      type: apiKey
      name: Authorization
      in: header
      description: IDトークンを付与

    Firebase:
      type: apiKey
      name: Authorization
      in: header
      description: IDトークンを付与
